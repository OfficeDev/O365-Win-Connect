<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticationErrorMessage" xml:space="preserve">
    <value>Oops!

This sample couldn't connect to Office 365. Check your debug output for errors.</value>
  </data>
  <data name="MailContents" xml:space="preserve">
    <value>&lt;html&gt;&lt;head&gt;
&lt;meta http-equiv='Content-Type' content='text/html; charset=us-ascii'&gt;
&lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body style='font-family:calibri'&gt;
&lt;h2&gt;Congratulations, {0}!&lt;/h2&gt;
&lt;p&gt;This is a message from the Office 365 Connect sample. You are well on your way to incorporating Office 365 services  
in your apps.
&lt;/p&gt;
&lt;p&gt;What&amp;#8217;s next?&lt;/p&gt;
&lt;p&gt;You can use the classes in the Visual Studio project to integrate Office 365 services and data into your own apps.&lt;/p&gt;
&lt;h2&gt;Give us feedback&lt;/h2&gt;
&lt;p&gt;We hope you found this sample useful. We&amp;#8217;d love to hear from you, so drop us an email at
&lt;a href='mailto:docthis@microsoft.com?subject=Feedback%20on%20the%20Office%20365%20Connect%20sample'&gt;
docthis@microsoft.com&lt;/a&gt; with your comments or &lt;a href='https://github.com/OfficeDev/O365-WinPlatform-Connect/issues'&gt;
log an issue&lt;/a&gt; on our repository. &lt;/p&gt;
&lt;p&gt;For more details on what else you can do with the Office 365 services in your Windows app, start with the
&lt;a href='http://dev.office.com/getting-started'&gt;Getting started&lt;/a&gt; page on dev.office.com.
&lt;/p&gt;
&lt;p&gt;Thanks, and happy coding!&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Your Office 365 Development team &lt;/p&gt;
&lt;div style='text-align:center'&gt;
&lt;table style='width:100%'&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href='https://github.com/OfficeDev/O365-WinPlatform-Connect'&gt;See on GitHub&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href='https://officespdev.uservoice.com/forums/224641-general/category/72301-documentation-guidance'&gt;Suggest on UserVoice&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;&lt;a href='http://twitter.com/share?text=I%20just%20started%20developing%20apps%20for%20%23Windows%208.1%20using%20the 
%20%23Office365%20Connect%20app%20%40OfficeDev&amp;amp;url=https://github.com/OfficeDev/O365-Windows-Connect'&gt;Share on Twitter&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="MailErrorMessage" xml:space="preserve">
    <value>Oops!

This sample couldn't send mail. Check your debug output for errors.</value>
  </data>
  <data name="MailSubject" xml:space="preserve">
    <value>Hi from the Office 365 Connect sample.</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>This sample shows how to connect to Office 365 using the Office 365 API Tools.

Tap the "Send mail" button to receive a message with more information about the sample. This sample will send an email from your Office 365 account.</value>
  </data>
</root>